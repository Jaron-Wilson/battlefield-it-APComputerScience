Tic-Tac-Toe
Problem Description:
Tic Tac Toe game is traditionally played on a 3x3 board between two players x and o. A player can mark a single cell by placing a symbol in it (either an 'x' or an 'o' character). A player who manages to mark a row, column, or a diagonal completely with his symbol first wins the game. The game ends in a tie if no player manages to win after all the cells have been marked. You will design a textual version of this game, in which a human player gets to play against a computer opponent.
Program Specification:
In this project, you will implement a complete Tic-Tac-Toe game in a Java program. Your implementation should follow this specification. You may use one or two dimensional array as data structure for the game board. Your program should include the following list of methods:
1. initBoard ()- update this method
This function initializes the game board. There are 9 cells represented by 1 or 2 dimensional array.
2. gameBoard () - update this method This method prints the game board.
3. checkWinner () - update this method
This method examines the array to see if either player has won. A player has won if he has marked a row, column or diagonal with his symbol. The function returns different values based on results of winner, loser and no winner.
4. void yourTurn ()
This method handles moves made by the user. It displays the game board and asks the user to enter a move. If the move is invalid, it prompts user to enter a valid move again. A valid move refers to one of the empty cells in the board.
5. void machineTurn ()
This method handles moves by the computer. You can implement a simple logic where you just search for an empty position in the array and mark it for computer player. You can get really creative and design the method so that it makes a well thought out move. The logic is entirely up to you. Finally, you should display the computer's move.
6. main() The main method controls the game. You will declare an array for the game and make use of the methods that you have written to produce behavior of the Tic-Tac-Toe game. The human player always makes the first move in the game. You should alternate between the human player and the computer. After each move you should check for a winner using the checkWinner method. While there is no winner, you should display the gameboard, ask the user for next valid move, update computer move until one of player wins or the game is tie.
Easy version: human vs. human (machine Turn method will be skipped)
Challenging version: human vs. smart computer (i.e. computer can't be beaten)
Sample Output:
Let's begin!
Please enter coordinate of your location (x): 0.0
¦ ¦ 101
Please enter coordinate of your location <x>: 1.1
1810:
¦ ¦ 10:
Please enter coordinate of your location (x): 1,0
18: 10: 1X1X10:
10:
You lost!
Press any key to continue....